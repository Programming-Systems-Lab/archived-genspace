/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddNetworkPanel.java
 *
 * Created on Feb 6, 2010, 7:13:17 PM
 */

package org.geworkbench.components.genspace.ui;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.List;
import java.util.concurrent.ExecutionException;

import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.geworkbench.components.genspace.bean.networks.NetworkFacade;
import org.geworkbench.components.genspace.bean.networks.NetworkMessage;
import org.geworkbench.components.genspace.bean.networks.Profile;
import org.geworkbench.components.genspace.bean.networks.ProfileFacade;
import org.geworkbench.components.genspace.ui.AutoCompleteCombo.Model;
import javax.swing.SwingWorker;

/**
 * 
 * @author jon
 */
public class AddNetworkPanel extends javax.swing.JPanel {
	private NetworkFacade f = new NetworkFacade();
	ProfileFacade p = new ProfileFacade();

	/** Creates new form AddNetworkPanel */
	public AddNetworkPanel() {
		initComponents();
		this.addFocusListener(new FocusListener() {

			@Override
			public void focusLost(FocusEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void focusGained(FocusEvent e) {
				updateFormFields();
			}
		});
	}

	private List<NetworkMessage> cachedAllNetworks;
	private List<NetworkMessage> cachedMyNetworks;

	public void updateFormFields() {
		if (p.amLoggedIn()) {

			SwingWorker<List<NetworkMessage>, Void> worker = new SwingWorker<List<NetworkMessage>, Void>() {

				@Override
				protected List<NetworkMessage> doInBackground()
						throws Exception {
					return f.listAllNetworks();
				}

				@Override
				protected void done() {
					try {
						cachedAllNetworks = get();
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (ExecutionException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					Model m = (Model) txtJoinNetwork.getModel();
					m.data.clear();
					for (NetworkMessage t : cachedAllNetworks) {
						m.data.add(t.subject);
					}
					txtJoinNetwork.setText("");
				}

			};
			worker.execute();

			SwingWorker<List<NetworkMessage>, Void> worker2 = new SwingWorker<List<NetworkMessage>, Void>() {

				@Override
				protected List<NetworkMessage> doInBackground()
						throws Exception {
					return f.listMyNetworks();
				}

				@Override
				protected void done() {
					try {
						cachedMyNetworks = get();
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (ExecutionException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					DefaultListModel model = new DefaultListModel();
					for (NetworkMessage t : cachedMyNetworks) {
						model.addElement(t.subject);
					}
					lstNetworks.setModel(model);
				}

			};
			worker2.execute();

		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		lstNetworks = new javax.swing.JList();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		lstMembers = new javax.swing.JList();
		jScrollPane3 = new javax.swing.JScrollPane();
		txtDetails = new javax.swing.JTextPane();
		jLabel4 = new javax.swing.JLabel();
		txtJoinNetwork = new AutoCompleteCombo();
		jScrollPane4 = new javax.swing.JScrollPane();
		lstPendingRequests = new javax.swing.JList();
		jLabel5 = new javax.swing.JLabel();
		btnAccept = new javax.swing.JButton();
		btnReject = new javax.swing.JButton();
		btnGo = new javax.swing.JButton();

		setPreferredSize(new java.awt.Dimension(500, 500));

		lstNetworks.setModel(new javax.swing.AbstractListModel() {
			String[] strings = {};

			@Override
			public int getSize() {
				return strings.length;
			}

			@Override
			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		lstNetworks.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				lstNetworksMouseClicked(evt);
			}
		});
		lstNetworks.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				lstNetworksMouseClicked(null);
			}
		});
		jScrollPane1.setViewportView(lstNetworks);

		jLabel1.setText("Networks");

		jLabel2.setText("Network Members");

		jLabel3.setText("Profile");

		lstMembers.setModel(new javax.swing.AbstractListModel() {
			String[] strings = {};

			@Override
			public int getSize() {
				return strings.length;
			}

			@Override
			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		lstMembers.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				lstMembersMouseClicked(evt);
			}
		});
		lstMembers.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				lstMembersMouseClicked(null);

			}
		});
		jScrollPane2.setViewportView(lstMembers);

		txtDetails.setContentType("text/html");
		txtDetails
				.setText("<html>\n  <head>\n\n  </head>\n  <body> </body>\n</html>\n");
		jScrollPane3.setViewportView(txtDetails);

		jLabel4.setText("Join/Create a network:");

		txtJoinNetwork.setText("txtNewNetwork");
		txtJoinNetwork.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(java.awt.event.KeyEvent evt) {
				txtJoinNetworkKeyReleased(evt);
			}
		});

		lstPendingRequests.setModel(new javax.swing.AbstractListModel() {
			String[] strings = {};

			@Override
			public int getSize() {
				return strings.length;
			}

			@Override
			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jScrollPane4.setViewportView(lstPendingRequests);

		jLabel5.setText("Pending Requests:");

		btnAccept.setText("Accept");
		btnAccept.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAcceptActionPerformed(evt);
			}
		});

		btnReject.setText("Reject");
		btnReject.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnRejectActionPerformed(evt);
			}
		});

		btnGo.setText("Go");
		btnGo.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnGoActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(6, 6, 6)
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		200,
																		Short.MAX_VALUE))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		btnAccept,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		78,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		50,
																		Short.MAX_VALUE)
																.addComponent(
																		btnReject,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		78,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(12, 12,
																		12)
																.addComponent(
																		jLabel4)
																.addGap(9, 9, 9))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		jLabel1))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel5)
																				.addComponent(
																						btnGo,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						50,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						jScrollPane4,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						200,
																						Short.MAX_VALUE)))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		txtJoinNetwork,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		159,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2)
												.addComponent(
														jScrollPane2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														140,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(87, 87,
																		87)
																.addComponent(
																		jLabel3))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(18, 18,
																		18)
																.addComponent(
																		jScrollPane3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		288,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(jLabel2)
												.addComponent(jLabel1))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jScrollPane3,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														466, Short.MAX_VALUE)
												.addComponent(
														jScrollPane2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														466, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		155,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(18, 18,
																		18)
																.addComponent(
																		jLabel4)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						txtJoinNetwork,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						btnGo))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jLabel5)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jScrollPane4,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		165,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						btnAccept)
																				.addComponent(
																						btnReject))))
								.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAcceptActionPerformed
		if (lstPendingRequests.getSelectedValue() != null) {
			f.acceptNetworkRequest((String) lstNetworks.getSelectedValue(),
					((Profile) lstPendingRequests.getSelectedValue()).profile
							.get("username"));
			updateFormFields();
		}

	}// GEN-LAST:event_btnAcceptActionPerformed

	private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRejectActionPerformed
		if (lstPendingRequests.getSelectedValue() != null) {
			f.rejectNetworkRequest((String) lstNetworks.getSelectedValue(),
					((Profile) lstPendingRequests.getSelectedValue()).profile
							.get("username"));
			updateFormFields();
		}
	}// GEN-LAST:event_btnRejectActionPerformed

	private void txtJoinNetworkKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtJoinNetworkKeyReleased
		// TODO add your handling code here:
	}// GEN-LAST:event_txtJoinNetworkKeyReleased

	private List<NetworkMessage> membersOfNetworkSelected;

	private void lstNetworksMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lstNetworksMouseClicked
		membersOfNetworkSelected = f.listUsersByNetwork((String) lstNetworks
				.getSelectedValue());
		DefaultListModel model = new DefaultListModel();

		for (NetworkMessage t : membersOfNetworkSelected) {
			model.addElement(t);
		}
		lstMembers.setModel(model);

		DefaultListModel m = new DefaultListModel();
		if (f.find((String) lstNetworks.getSelectedValue()).creator
				.equals(GenSpaceLogin.genspaceLogin)) {
			for (NetworkMessage t : f
					.listPendingUsersByNetwork(((String) lstNetworks
							.getSelectedValue()))) {
				m.addElement(t);
			}
		}
		lstPendingRequests.setModel(m);

	}// GEN-LAST:event_lstNetworksMouseClicked

	private void lstMembersMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lstMembersMouseClicked

		Profile p = (Profile) lstMembers.getSelectedValue();
		txtDetails.setText(ProfileFacade.renderProfileToHTML(p));
	}// GEN-LAST:event_lstMembersMouseClicked

	private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGoActionPerformed
		// OK, we clicked "go". See if this is a create or a join
		boolean found = false;
		for (NetworkMessage m : cachedAllNetworks) {
			if (m.subject.equals(txtJoinNetwork.getText())) {
				found = true;
				break;
			}
		}
		for (NetworkMessage m : cachedMyNetworks) {
			if (m.subject.equals(txtJoinNetwork.getText())) {
				return;
			}
		}
		if (found) {
			// Join
			f.joinNetwork(txtJoinNetwork.getText());
		} else {
			// create
			f.createNetwork(txtJoinNetwork.getText());
		}
		updateFormFields();
		txtJoinNetwork.setText("");

	}// GEN-LAST:event_btnGoActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAccept;
	private javax.swing.JButton btnGo;
	private javax.swing.JButton btnReject;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JList lstMembers;
	private javax.swing.JList lstNetworks;
	private javax.swing.JList lstPendingRequests;
	private javax.swing.JTextPane txtDetails;
	private AutoCompleteCombo txtJoinNetwork;
	// End of variables declaration//GEN-END:variables

}

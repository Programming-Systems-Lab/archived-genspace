/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RosterFrame.java
 *
 * Created on Jul 11, 2009, 2:23:51 PM
 */

package org.geworkbench.components.genspace.ui.chat;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;

import javax.swing.DefaultListModel;

import org.geworkbench.components.genspace.chat.ChatReceiver;
import org.jivesoftware.smack.Roster;
import org.jivesoftware.smack.RosterEntry;
import org.jivesoftware.smack.packet.Presence;

/**
 * A RosterFrame displays roster (buddy list) information
 * @author jsb2125
 */
public class RosterFrame extends javax.swing.JFrame {

	
	/**
	 * Update the roster
	 * @param newr new Roster
	 */
	public void setRoster(Roster newr)
	{
		rosterPanel.setRoster(newr);
	}
	
    /** Creates new form RosterFrame */
    public RosterFrame() {
        initComponents();
    }
    /**
     * Change the current presence
     * @param e
     */
    private void cmbStatusActionPerformed(ActionEvent e) {
    	String status = cmbStatus.getSelectedItem().toString();
    	Presence pr;
    	if(status.equals("Available"))
    	{
    		pr = new Presence(Presence.Type.available);
    		pr.setMode(Presence.Mode.available);
    	}
    	else if(status.equals("Away"))
    	{
    		pr = new Presence(Presence.Type.available);
    		pr.setMode(Presence.Mode.away);
    	}
    	else
    		pr = new Presence(Presence.Type.unavailable);
		pr.setStatus(cmbStatus.getSelectedItem().toString());
    	ChatReceiver.connection.sendPacket(pr);
		
	};
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rosterPanel = new org.geworkbench.components.genspace.ui.chat.RosterPanel();
        lblStatus = new javax.swing.JLabel();
        
        String[] statuses = { "Available", "Away", "Offline" };
        cmbStatus = new javax.swing.JComboBox(statuses);
        cmbStatus.addActionListener(new ActionListener(){public void actionPerformed(java.awt.event.ActionEvent e) {
        	cmbStatusActionPerformed(e);
        }

		});
        
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();


        lblStatus.setText("YourStatus:");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(rosterPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cmbStatus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(lblStatus)
                        .addContainerGap(62, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(rosterPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblStatus)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(cmbStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RosterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblStatus;
    private org.geworkbench.components.genspace.ui.chat.RosterPanel rosterPanel;
    private javax.swing.JComboBox cmbStatus;
    // End of variables declaration//GEN-END:variables

}
